{
    "openapi": "3.1.0",
    "info": {
        "title": "UnifyAI HTTP API Reference",
        "version": "0.1.0"
    },
    "paths": {
        "/v0/providers": {
            "get": {
                "tags": [
                    "Supported Endpoints"
                ],
                "summary": "List Providers",
                "description": "Lists available providers. If `model` is specified,\nreturns the providers that support that model.",
                "operationId": "list_providers_v0_providers_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Model to get available providers for.",
                            "title": "Model"
                        },
                        "description": "Model to get available providers for.",
                        "example": "llama-3.1-405b-chat"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "title": "Response List Providers V0 Providers Get"
                                },
                                "example": [
                                    "openai",
                                    "anthropic",
                                    "together-ai",
                                    "..."
                                ]
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/models": {
            "get": {
                "tags": [
                    "Supported Endpoints"
                ],
                "summary": "List Models",
                "description": "Lists available models. If `provider` is specified,\nreturns the models that the provider supports.\nYou can also show all *custom* models by passing `custom` as the provider.",
                "operationId": "list_models_v0_models_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "provider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Provider to get available models from.",
                            "title": "Provider"
                        },
                        "description": "Provider to get available models from.",
                        "example": "openai"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "title": "Response List Models V0 Models Get"
                                },
                                "example": [
                                    "gpt-3.5-turbo",
                                    "gpt-4",
                                    "claude-3-haiku",
                                    "..."
                                ]
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/endpoints": {
            "get": {
                "tags": [
                    "Supported Endpoints"
                ],
                "summary": "List Endpoints",
                "description": "Lists available endpoints in `model@provider` format.\nIf `model` or `provider` are specified, only the matching endpoints will be listed.\nYou can also show all *custom* endpoints by passing `custom` as the provider.",
                "operationId": "list_endpoints_v0_endpoints_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Model to get available endpoints for.",
                            "title": "Model"
                        },
                        "description": "Model to get available endpoints for.",
                        "example": "llama-3.1-405b-chat"
                    },
                    {
                        "name": "provider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Provider to get available endpoints for.",
                            "title": "Provider"
                        },
                        "description": "Provider to get available endpoints for.",
                        "example": "openai"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "title": "Response List Endpoints V0 Endpoints Get"
                                },
                                "example": [
                                    "claude-3-haiku@anthropic",
                                    "llama-3-70b-chat@groq",
                                    "mistral-large@mistral-ai",
                                    "..."
                                ]
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/chat/completions": {
            "post": {
                "tags": [
                    "LLM Queries"
                ],
                "summary": "Chat Completions",
                "description": "OpenAI compatible `/chat/completions` endpoint for LLM inference.\nCheck the OpenAI\n[API reference](https://platform.openai.com/docs/api-reference/chat)\nfor the most updated documentation. The ground truth is always the latest OpenAI API\nReference. The arguments below are copied for convenience, but might not be fully\nup-to-date at all times.",
                "operationId": "chat_completions_v0_chat_completions_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/ChatCompletionRequest"
                                    },
                                    {
                                        "items": {
                                            "$ref": "#/components/schemas/ChatCompletionRequest"
                                        },
                                        "type": "array"
                                    }
                                ],
                                "title": "Request"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatCompletionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v0/tags": {
            "get": {
                "tags": [
                    "Logging"
                ],
                "summary": "Get Query Tags",
                "description": "Returns a list of the tags in your account",
                "operationId": "get_query_tags_v0_tags_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Response Get Query Tags V0 Tags Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v0/queries": {
            "get": {
                "tags": [
                    "Logging"
                ],
                "summary": "Get Queries",
                "description": "Get the queries history, optionally for a given set of tags for a narrowed search.",
                "operationId": "get_queries_v0_queries_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tags",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Tags to filter for queries that are marked with these tags.",
                            "title": "Tags"
                        },
                        "description": "Tags to filter for queries that are marked with these tags.",
                        "example": "my_tag"
                    },
                    {
                        "name": "endpoints",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Optionally specify an endpoint, or a list of endpoints to filter for",
                            "title": "Endpoints"
                        },
                        "description": "Optionally specify an endpoint, or a list of endpoints to filter for",
                        "example": "gpt-4o@openai"
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Timestamp of the earliest query to aggregate. Format is `YYYY-MM-DD hh:mm:ss`.",
                            "title": "Start Time"
                        },
                        "description": "Timestamp of the earliest query to aggregate. Format is `YYYY-MM-DD hh:mm:ss`.",
                        "example": "2024-07-12 04:20:32"
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Timestamp of the latest query to aggregate. Format is `YYYY-MM-DD hh:mm:ss`.",
                            "title": "End Time"
                        },
                        "description": "Timestamp of the latest query to aggregate. Format is `YYYY-MM-DD hh:mm:ss`.",
                        "example": "2024-08-12 04:20:32"
                    },
                    {
                        "name": "page_number",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "The query history is returned in pages, with up to 20 prompts per page. Increase the page number to see older prompts.",
                            "default": 1,
                            "title": "Page Number"
                        },
                        "description": "The query history is returned in pages, with up to 20 prompts per page. Increase the page number to see older prompts.",
                        "example": "1"
                    },
                    {
                        "name": "failures",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "const": "only",
                                    "type": "string"
                                }
                            ],
                            "description": "indicates whether to includes failures in the return (when set as True ), or whether to return failures exlusively (when set as 'only').",
                            "default": false,
                            "title": "Failures"
                        },
                        "description": "indicates whether to includes failures in the return (when set as True ), or whether to return failures exlusively (when set as 'only').",
                        "example": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Logging"
                ],
                "summary": "Log Query",
                "operationId": "log_query_v0_queries_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_log_query_v0_queries_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/metrics": {
            "get": {
                "tags": [
                    "Logging"
                ],
                "summary": "Get Query Metrics",
                "description": "Returns aggregated telemetry data from previous queries to the `/chat/completions`\nendpoint, specifically the p50 and p95 for generation time and tokens per second,\nand also the total prompt and completion tokens processed within the interval. The\nuser id and total request count within the interval are also returned.",
                "operationId": "get_query_metrics_v0_metrics_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "start_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Timestamp of the earliest query to aggregate. Format is `YYYY-MM-DD hh:mm:ss`.",
                            "title": "Start Time"
                        },
                        "description": "Timestamp of the earliest query to aggregate. Format is `YYYY-MM-DD hh:mm:ss`.",
                        "example": "2024-07-12 04:20:32"
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Timestamp of the latest query to aggregate. Format is `YYYY-MM-DD hh:mm:ss`.",
                            "title": "End Time"
                        },
                        "description": "Timestamp of the latest query to aggregate. Format is `YYYY-MM-DD hh:mm:ss`.",
                        "example": "2024-08-12 04:20:32"
                    },
                    {
                        "name": "models",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Models to fetch metrics from. The list must be a set of comma-separated strings. i.e. `gpt-3.5-turbo,gpt-4o`",
                            "title": "Models"
                        },
                        "description": "Models to fetch metrics from. The list must be a set of comma-separated strings. i.e. `gpt-3.5-turbo,gpt-4o`",
                        "example": "gpt-4o,llama-3.1-405b-chat,claude-3.5-sonnet"
                    },
                    {
                        "name": "providers",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Providers to fetch metrics from. The list must be a set of comma-separated strings. i.e. `openai,together-ai`",
                            "title": "Providers"
                        },
                        "description": "Providers to fetch metrics from. The list must be a set of comma-separated strings. i.e. `openai,together-ai`",
                        "example": "openai,anthropic,fireworks-ai"
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Number of seconds in the aggregation interval.",
                            "default": 300,
                            "title": "Interval"
                        },
                        "description": "Number of seconds in the aggregation interval.",
                        "example": 300
                    },
                    {
                        "name": "secondary_user_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Secondary user id. The secondary user id will match any string previously sent in the `user` attribute of `/chat/completions`.",
                            "title": "Secondary User Id"
                        },
                        "description": "Secondary user id. The secondary user id will match any string previously sent in the `user` attribute of `/chat/completions`.",
                        "example": "sample_user_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    },
                                    "title": "Response Get Query Metrics V0 Metrics Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/custom_api_key": {
            "post": {
                "tags": [
                    "Custom API keys"
                ],
                "summary": "Create Custom Api Key",
                "description": "Stores a custom API key from an LLM provider in your account. This can be done in\none of two ways:\n\n1. As part of a custom endpoint. If you define a custom endpoint, you can reference\na custom API key. This will be sent to the endpoint as part of the request.\n\n2. To use your own API keys with the standard providers. If any of your custom API\nkeys match a provider name and you pass `use_custom_keys=True` to the\n`/chat/completions` endpoint, then this API key will be used, using your own\naccount with the provider directly.",
                "operationId": "create_custom_api_key_v0_custom_api_key_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the API key.",
                            "title": "Name"
                        },
                        "description": "Name of the API key.",
                        "example": "key1"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Value of the API key.",
                            "title": "Value"
                        },
                        "description": "Value of the API key.",
                        "example": "value1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Create Custom Api Key V0 Custom Api Key Post"
                                },
                                "example": {
                                    "info": "API key created successfully!"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Custom API keys"
                ],
                "summary": "Get Custom Api Key",
                "description": "Returns the value of the key for the specified custom API key name.",
                "operationId": "get_custom_api_key_v0_custom_api_key_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the API key to get the value for.",
                            "title": "Name"
                        },
                        "description": "Name of the API key to get the value for.",
                        "example": "key1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomApiKeyModelResponse"
                                },
                                "example": {
                                    "name": "custom_api_key_name",
                                    "value": "custom_api_key_value"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Custom API key Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Custom API key not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Custom API keys"
                ],
                "summary": "Delete Custom Api Key",
                "description": "Deletes the custom API key from your account.",
                "operationId": "delete_custom_api_key_v0_custom_api_key_delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the custom API key to delete.",
                            "title": "Name"
                        },
                        "description": "Name of the custom API key to delete.",
                        "example": "key1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Delete Custom Api Key V0 Custom Api Key Delete"
                                },
                                "example": {
                                    "info": "API key deleted successfully!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Custom API key Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Custom API key not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/custom_api_key/rename": {
            "post": {
                "tags": [
                    "Custom API keys"
                ],
                "summary": "Rename Custom Api Key",
                "description": "Renames the custom API key in your account.",
                "operationId": "rename_custom_api_key_v0_custom_api_key_rename_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the custom API key to be updated.",
                            "title": "Name"
                        },
                        "description": "Name of the custom API key to be updated.",
                        "example": "key1"
                    },
                    {
                        "name": "new_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "New name for the custom API key.",
                            "title": "New Name"
                        },
                        "description": "New name for the custom API key.",
                        "example": "key2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Rename Custom Api Key V0 Custom Api Key Rename Post"
                                },
                                "example": {
                                    "info": "API key renamed successfully!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Custom API key Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Custom API key not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/custom_api_key/list": {
            "get": {
                "tags": [
                    "Custom API keys"
                ],
                "summary": "List Custom Api Keys",
                "description": "Returns a list of the names for all custom API keys in your account.",
                "operationId": "list_custom_api_keys_v0_custom_api_key_list_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CustomApiKeyModelResponse"
                                    },
                                    "type": "array",
                                    "title": "Response List Custom Api Keys V0 Custom Api Key List Get"
                                },
                                "example": [
                                    {
                                        "name": "custom_key_1",
                                        "value": "****alue_1"
                                    },
                                    {
                                        "name": "custom_key_2",
                                        "value": "****alue_2"
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v0/custom_endpoint": {
            "post": {
                "tags": [
                    "Custom Endpoints"
                ],
                "summary": "Create Custom Endpoint",
                "description": "Creates a custom endpoint. This endpoint must either be a fine-tuned model from one\nof the supported providers (`/v0/providers`), in which case the \"provider\" argument\nmust be set accordingly. Otherwise, the endpoint must support the OpenAI\n`/chat/completions` format. To query your custom endpoint, replace your endpoint\nstring with `<endpoint_name>@custom` when querying any general custom endpoint. You\ncan show all *custom* endpoints by querying `/v0/endpoints` and passing `custom` as\nthe `provider` argument.",
                "operationId": "create_custom_endpoint_v0_custom_endpoint_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The endpoint name for your custom endpoint, in model@provider format. If it's a custom endpoint following the OpenAI format then the provider must be `@custom`, otherwise if it's a fine-tuned model from one of the existing providers it can be specified with a prepending `custom-`, i.e. `@custom-anthropic`.",
                            "title": "Name"
                        },
                        "description": "The endpoint name for your custom endpoint, in model@provider format. If it's a custom endpoint following the OpenAI format then the provider must be `@custom`, otherwise if it's a fine-tuned model from one of the existing providers it can be specified with a prepending `custom-`, i.e. `@custom-anthropic`.",
                        "example": "endpoint1"
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Base URL of the endpoint being called. Must support the OpenAI format.",
                            "title": "Url"
                        },
                        "description": "Base URL of the endpoint being called. Must support the OpenAI format.",
                        "example": "https://api.url1.com"
                    },
                    {
                        "name": "key_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the API key that will be passed as part of the query.",
                            "title": "Key Name"
                        },
                        "description": "Name of the API key that will be passed as part of the query.",
                        "example": "key1"
                    },
                    {
                        "name": "model_arg",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "The value passed to the model arugment of the *underlying* API which is being wrapped into Unify. For example, you might call your endpoint `llama-3-baseten@custom` to distinguish the custom endpoint within Unify, but under the hood need to pass `llama-3.2-90b-chat` to the Baseten endpoint.",
                            "title": "Model Arg"
                        },
                        "description": "The value passed to the model arugment of the *underlying* API which is being wrapped into Unify. For example, you might call your endpoint `llama-3-baseten@custom` to distinguish the custom endpoint within Unify, but under the hood need to pass `llama-3.2-90b-chat` to the Baseten endpoint.",
                        "example": "llama-3.1-8b-finetuned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Create Custom Endpoint V0 Custom Endpoint Post"
                                },
                                "example": {
                                    "info": "Custom endpoint created successfully!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Custom API Key Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Custom API Key not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Custom Endpoints"
                ],
                "summary": "Delete Custom Endpoint",
                "description": "Deletes a custom endpoint from your account.",
                "operationId": "delete_custom_endpoint_v0_custom_endpoint_delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the custom endpoint to delete.",
                            "title": "Name"
                        },
                        "description": "Name of the custom endpoint to delete.",
                        "example": "endpoint1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Delete Custom Endpoint V0 Custom Endpoint Delete"
                                },
                                "example": {
                                    "info": "Custom endpoint deleted successfully!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Custom Endpoint Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Custom endpoint not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/custom_endpoint/rename": {
            "post": {
                "tags": [
                    "Custom Endpoints"
                ],
                "summary": "Rename Custom Endpoint",
                "description": "Renames a custom endpoint in your account.",
                "operationId": "rename_custom_endpoint_v0_custom_endpoint_rename_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the custom endpoint to be updated.",
                            "title": "Name"
                        },
                        "description": "Name of the custom endpoint to be updated.",
                        "example": "name1"
                    },
                    {
                        "name": "new_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "New name for the custom endpoint.",
                            "title": "New Name"
                        },
                        "description": "New name for the custom endpoint.",
                        "example": "name2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Rename Custom Endpoint V0 Custom Endpoint Rename Post"
                                },
                                "example": {
                                    "info": "Custom endpoint renamed successfully!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Custom endpoint Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Custom endpoint not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/custom_endpoint/list": {
            "get": {
                "tags": [
                    "Custom Endpoints"
                ],
                "summary": "List Custom Endpoints",
                "description": "Returns a list of the available custom endpoints.",
                "operationId": "list_custom_endpoints_v0_custom_endpoint_list_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CustomEndpointModelResponse"
                                    },
                                    "type": "array",
                                    "title": "Response List Custom Endpoints V0 Custom Endpoint List Get"
                                },
                                "example": [
                                    {
                                        "name": "endpoint_1",
                                        "model_arg": "llama_finetune",
                                        "url": "https://...",
                                        "key": "custom_key_1"
                                    },
                                    {
                                        "name": "endpoint_2",
                                        "model_arg": "mixtral_finetune",
                                        "url": "https://...",
                                        "key": "custom_key_2"
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v0/endpoint-metrics": {
            "post": {
                "tags": [
                    "Endpoint Metrics"
                ],
                "summary": "Log Endpoint Metric",
                "description": "Append speed or cost data to the standardized time-series benchmarks for a custom\nendpoint (only custom endpoints are publishable by end users).",
                "operationId": "log_endpoint_metric_v0_endpoint_metrics_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "endpoint_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the *custom* endpoint to append benchmark data for.",
                            "title": "Endpoint Name"
                        },
                        "description": "Name of the *custom* endpoint to append benchmark data for.",
                        "example": "my_endpoint"
                    },
                    {
                        "name": "metric_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the metric to submit. Allowed metrics are:\n        \"input_cost\", \"output_cost\", \"time_to_first_token\", \"inter_token_latency\".",
                            "title": "Metric Name"
                        },
                        "description": "Name of the metric to submit. Allowed metrics are:\n        \"input_cost\", \"output_cost\", \"time_to_first_token\", \"inter_token_latency\".",
                        "example": "tokens-per-second"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "description": "Value of the metric to submit.",
                            "title": "Value"
                        },
                        "description": "Value of the metric to submit.",
                        "example": 10
                    },
                    {
                        "name": "measured_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp to associate with the submission. Defaults to current time if unspecified.",
                            "title": "Measured At"
                        },
                        "description": "The timestamp to associate with the submission. Defaults to current time if unspecified.",
                        "example": "2024-08-12T04:20:32.808410"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "info": "Custom endpoint benchmark uploaded successfully!"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Benchmark not valid",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Invalid data submitted"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Endpoint Metrics"
                ],
                "summary": "Get Endpoint Metrics",
                "description": "Extracts cost and speed data for the provided endpoint via our standardized\nefficiency benchmarks, in the specified region, with the specified sequence length,\nwith all benchmark values returned within the specified time window.\n\nWhen extracting data for a *custom* endpoint, then `model` is the endpoint name, and\n`provider` must be set as `\"custom\"`. The arguments `region` and `seq_len` are\nignored for custom endpoints (they are not publishable).\n\nIf neither `start_time` nor `end_time` are provided, then only the *latest*\nbenchmark data is returned. If only `start_time` is provided, then `end_time` is\nassumed to be the current time. An exception is raised if only `end_time` is\nprovided.",
                "operationId": "get_endpoint_metrics_v0_endpoint_metrics_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Name of the model.",
                            "title": "Model"
                        },
                        "description": "Name of the model.",
                        "example": "gpt-4o-mini"
                    },
                    {
                        "name": "provider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Name of the provider.",
                            "title": "Provider"
                        },
                        "description": "Name of the provider.",
                        "example": "openai"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Region where the benchmark is run.\n        Options are: `\"Belgium\"`, `\"Hong Kong\"` or `\"Iowa\"`.",
                            "default": "Iowa",
                            "title": "Region"
                        },
                        "description": "Region where the benchmark is run.\n        Options are: `\"Belgium\"`, `\"Hong Kong\"` or `\"Iowa\"`.",
                        "example": "Belgium"
                    },
                    {
                        "name": "seq_len",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Length of the sequence used for benchmarking, can be short or long",
                            "default": "short",
                            "title": "Seq Len"
                        },
                        "description": "Length of the sequence used for benchmarking, can be short or long",
                        "example": "short"
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Window start time. Only returns the latest benchmark if unspecified",
                            "title": "Start Time"
                        },
                        "description": "Window start time. Only returns the latest benchmark if unspecified",
                        "example": "2024-07-12T04:20:32.808410"
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Window end time. Assumed to be the current time if this is unspecified *and* start_time *is* specified. Only the latest benchmark is returned if both are unspecified.",
                            "title": "End Time"
                        },
                        "description": "Window end time. Assumed to be the current time if this is unspecified *and* start_time *is* specified. Only the latest benchmark is returned if both are unspecified.",
                        "example": "2024-08-12T04:20:32.808410"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                {
                                                    "type": "number"
                                                },
                                                {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "anyOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "null"
                                                }
                                            ]
                                        }
                                    },
                                    "title": "Response Get Endpoint Metrics V0 Endpoint Metrics Get"
                                },
                                "example": {
                                    "ttft": 440.2323939998496,
                                    "itl": 8.797065147959705,
                                    "input_cost": 0.15,
                                    "output_cost": 0.6,
                                    "measured_at": "2024-08-17T19:19:37.289937"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Endpoint Metrics"
                ],
                "summary": "Delete Endpoint Metrics",
                "description": "Delete all benchmark time-series data for a given *custom* endpoint with the\nspecified timestamps. If timestamps are not specified, then *all* benchmark data\nwill be deleted for the specified custom endpoint.\nThe time-series benchmark data for *public* endpoints are not deletable.",
                "operationId": "delete_endpoint_metrics_v0_endpoint_metrics_delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "endpoint_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the *custom* endpoint to submit a benchmark for.",
                            "title": "Endpoint Name"
                        },
                        "description": "Name of the *custom* endpoint to submit a benchmark for.",
                        "example": "my_endpoint"
                    },
                    {
                        "name": "timestamps",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "List of timestamps to delete the endpoint metrics for.",
                            "title": "Timestamps"
                        },
                        "description": "List of timestamps to delete the endpoint metrics for.",
                        "example": "2024-08-17T19:19:37.289937"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Delete Endpoint Metrics V0 Endpoint Metrics Delete"
                                },
                                "example": {
                                    "info": "Benchmark deleted successfully!"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/dataset/{dataset}/artifacts": {
            "post": {
                "tags": [
                    "Dataset Artifacts"
                ],
                "summary": "Create Artifacts",
                "description": "Creates one or more artifacts associated to a dataset. Artifacts are\ndataset-level metadata that don't depend on other variables.",
                "operationId": "create_artifacts_v0_dataset__dataset__artifacts_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the dataset the artifacts belong to.",
                            "title": "Dataset"
                        },
                        "description": "Name of the dataset the artifacts belong to.",
                        "example": "eval-dataset"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DatasetArtifactConfig"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "info": "Artifact(s) created successfully!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Dataset Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Dataset <dataset> not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Dataset Artifacts"
                ],
                "summary": "List Artifacts",
                "description": "Returns the key-value pairs of all artifacts in a dataset.",
                "operationId": "list_artifacts_v0_dataset__dataset__artifacts_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the dataset to delete an artifact from.",
                            "title": "Dataset"
                        },
                        "description": "Name of the dataset to delete an artifact from.",
                        "example": "eval-dataset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "artifact_1": "value_1",
                                    "artifact_2": "value_2"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Dataset Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Dataset <dataset> not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/dataset/{dataset}/artifacts/{key}": {
            "delete": {
                "tags": [
                    "Dataset Artifacts"
                ],
                "summary": "Delete Artifact",
                "description": "Deletes an artifact from a dataset.",
                "operationId": "delete_artifact_v0_dataset__dataset__artifacts__key__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the dataset to delete an artifact from.",
                            "title": "Dataset"
                        },
                        "description": "Name of the dataset to delete an artifact from.",
                        "example": "eval-dataset"
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Key of the artifact to delete.",
                            "title": "Key"
                        },
                        "description": "Key of the artifact to delete.",
                        "example": "dataset-description"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "info": "Artifact deleted successfully!"
                                }
                            }
                        }
                    },
                    "4041": {
                        "description": "Dataset Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Dataset <dataset> not found."
                                }
                            }
                        }
                    },
                    "4042": {
                        "description": "Artifact Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Artifact <key> not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/datasets/": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "List Datasets",
                "description": "Retrieve a list of all datasets.",
                "operationId": "list_datasets_v0_datasets__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": [
                                    {
                                        "name": "dataset1"
                                    },
                                    {
                                        "name": "folder/dataset2"
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v0/dataset/{name}": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Get Dataset Entries",
                "description": "Retrieve entries from a specific dataset.",
                "operationId": "get_dataset_entries_v0_dataset__name__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Dataset name (can include forward slashes)",
                            "title": "Name"
                        },
                        "description": "Dataset name (can include forward slashes)",
                        "example": "my_dataset"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 200,
                            "minimum": 1,
                            "title": "Limit"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Offset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": [
                                    {
                                        "id": "puzfJbFPmZ",
                                        "entry": "...",
                                        "created_at": "..."
                                    },
                                    {
                                        "id": "eAdXb2X3f8",
                                        "entry": "...",
                                        "created_at": "..."
                                    }
                                ]
                            }
                        }
                    },
                    "404": {
                        "description": "Dataset Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Dataset not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Rename Dataset",
                "description": "Rename an existing dataset.",
                "operationId": "rename_dataset_v0_dataset__name__patch",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Current dataset name (can include forward slashes)",
                            "title": "Name"
                        },
                        "description": "Current dataset name (can include forward slashes)",
                        "example": "my_dataset"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DatasetNewName"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Dataset Renamed",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "info": "Dataset renamed successfully!"
                            }
                        }
                    },
                    "404": {
                        "description": "Dataset Not Found",
                        "content": {
                            "application/json": {
                                "example": "Dataset not found."
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Delete Dataset",
                "description": "Delete a dataset and all its corresponding entries.",
                "operationId": "delete_dataset_v0_dataset__name__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Dataset name (can include forward slashes)",
                            "title": "Name"
                        },
                        "description": "Dataset name (can include forward slashes)",
                        "example": "my_dataset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "info": "Dataset deleted successfully!"
                            }
                        }
                    },
                    "404": {
                        "description": "Dataset Not Found",
                        "content": {
                            "application/json": {
                                "example": "Dataset not found"
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/dataset/{name}/entry/{id}": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Get Dataset Entry",
                "description": "Retrieve a specific entry from a dataset.",
                "operationId": "get_dataset_entry_v0_dataset__name__entry__id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Dataset name (can include forward slashes)",
                            "title": "Name"
                        },
                        "description": "Dataset name (can include forward slashes)",
                        "example": "my_dataset"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Entry ID",
                            "title": "Id"
                        },
                        "description": "Entry ID",
                        "example": "123"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "id": "uoreHGVKfQ",
                                    "entry": "...",
                                    "created_at": "..."
                                }
                            }
                        }
                    },
                    "4041": {
                        "description": "Dataset Not Found",
                        "content": {
                            "application/json": {
                                "example": "Dataset not found."
                            }
                        }
                    },
                    "4042": {
                        "description": "Dataset entry Not Found",
                        "content": {
                            "application/json": {
                                "example": "Dataset entry <id> not found."
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Delete Dataset Entry",
                "description": "Delete a specific entry from a dataset.",
                "operationId": "delete_dataset_entry_v0_dataset__name__entry__id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Dataset name (can include forward slashes)",
                            "title": "Name"
                        },
                        "description": "Dataset name (can include forward slashes)",
                        "example": "my_dataset"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Entry ID",
                            "title": "Id"
                        },
                        "description": "Entry ID",
                        "example": "123"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "info": "Dataset entry deleted successfully!"
                            }
                        }
                    },
                    "4041": {
                        "description": "Dataset Not Found",
                        "content": {
                            "application/json": {
                                "example": "Dataset not found."
                            }
                        }
                    },
                    "4042": {
                        "description": "Dataset Entry Not Found",
                        "content": {
                            "application/json": {
                                "example": "Dataset entry <id> not found."
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/dataset": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Create Dataset",
                "description": "Create a new dataset.\nTo create a dataset for a specific project, prefix it's name with \\<project_name\\>/.",
                "operationId": "create_dataset_v0_dataset_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DatasetInfo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Dataset Created",
                        "content": {
                            "application/json": {
                                "example": {
                                    "info": "Dataset created successfully!"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Dataset already exists",
                        "content": {
                            "application/json": {
                                "example": "Dataset already exists."
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v0/dataset/{name}/entries": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Add Dataset Entries",
                "description": "Add multiple entries to a dataset.",
                "operationId": "add_dataset_entries_v0_dataset__name__entries_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Dataset name (can include forward slashes)",
                            "title": "Name"
                        },
                        "description": "Dataset name (can include forward slashes)",
                        "example": "my_dataset"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntriesConfig"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Entries Added",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "added": [
                                        "id_1",
                                        "id_2",
                                        "id_3"
                                    ],
                                    "already_present": [
                                        "id_4",
                                        "id_5"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Dataset Not Found",
                        "content": {
                            "application/json": {
                                "example": "Dataset not found."
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/project": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Create Project",
                "description": "Creates a logging project and adds this to your account. This project will\nhave a set of logs associated with it.",
                "operationId": "create_project_v0_project_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectConfig"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "info": "Project created successfully!"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Already Existing Project",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "A logging project with this name already exists."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v0/project/{name}": {
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Delete Project",
                "description": "Deletes a project from your account.",
                "operationId": "delete_project_v0_project__name__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the project to delete.",
                            "title": "Name"
                        },
                        "description": "Name of the project to delete.",
                        "example": "eval-project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "info": "Project deleted successfully!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Project <name> not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Projects"
                ],
                "summary": "Rename Project",
                "description": "Renames a project from `name` to `new_name` in your account.",
                "operationId": "rename_project_v0_project__name__patch",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the project to rename.",
                            "title": "Name"
                        },
                        "description": "Name of the project to rename.",
                        "example": "old-project-name"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectConfig"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "info": "Project renamed successfully!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Project <name> not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "List Projects",
                "description": "Returns the names of all projects stored in your account.",
                "operationId": "list_projects_v0_projects_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": [
                                    "project_a",
                                    "project_b",
                                    "project_c"
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v0/project/{project}/artifacts": {
            "post": {
                "tags": [
                    "Project Artifacts"
                ],
                "summary": "Create Artifacts",
                "description": "Creates one or more artifacts associated to a project. Artifacts are\nproject-level metadata that don't depend on other variables.",
                "operationId": "create_artifacts_v0_project__project__artifacts_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the project the artifacts belong to.",
                            "title": "Project"
                        },
                        "description": "Name of the project the artifacts belong to.",
                        "example": "eval-project"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ArtifactConfig"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "info": "Artifact(s) created successfully!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Project <project> not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Project Artifacts"
                ],
                "summary": "List Artifacts",
                "description": "Returns the key-value pairs of all artifacts in a project.",
                "operationId": "list_artifacts_v0_project__project__artifacts_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the project to delete an artifact from.",
                            "title": "Project"
                        },
                        "description": "Name of the project to delete an artifact from.",
                        "example": "eval-project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "artifact_1": "value_1",
                                    "artifact_2": "value_2"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Project <project> not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/project/{project}/artifacts/{key}": {
            "delete": {
                "tags": [
                    "Project Artifacts"
                ],
                "summary": "Delete Artifact",
                "description": "Deletes an artifact from a project.",
                "operationId": "delete_artifact_v0_project__project__artifacts__key__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the project to delete an artifact from.",
                            "title": "Project"
                        },
                        "description": "Name of the project to delete an artifact from.",
                        "example": "eval-project"
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Key of the artifact to delete.",
                            "title": "Key"
                        },
                        "description": "Key of the artifact to delete.",
                        "example": "project-description"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "info": "Artifact deleted successfully!"
                                }
                            }
                        }
                    },
                    "4041": {
                        "description": "Project Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Project <project> not found."
                                }
                            }
                        }
                    },
                    "4042": {
                        "description": "Artifact Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Artifact <key> not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/log": {
            "post": {
                "tags": [
                    "Evals"
                ],
                "summary": "Create Log",
                "description": "Creates a log associated to a project. Logs are\nLLM-call-level data that might depend on other variables.\n\nA \"explicit_types\" dictionary can be passed as part of the `entries`.\nIf present, any matching key inside this dictionary will override the\ninferred type of that particular entry.\n\nThis method returns the id of the new stored log.",
                "operationId": "create_log_v0_log_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateLogConfig"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "info": "Log created successfully!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Project not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v0/logs": {
            "delete": {
                "tags": [
                    "Evals"
                ],
                "summary": "Delete Logs",
                "description": "Deletes multiple logs from a project.",
                "operationId": "delete_logs_v0_logs_delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteLogsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "info": "Logs deleted successfully!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Logs Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "One or more logs with the specified IDs were not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Evals"
                ],
                "summary": "Update Logs",
                "description": "Updates multiple logs with the provided entries. Each entry will be either added\nor overridden in the specified logs.\n\nA dictionary of \"explicit_types\" can be passed as part of the `entries`.\nIf present, it will override the inferred type of any matching key in all logs.",
                "operationId": "update_logs_v0_logs_put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateLogRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "info": "Logs updated successfully!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Log Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "One or more logs with the specified IDs were not found."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Invalid request format or data."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Evals"
                ],
                "summary": "Get Logs",
                "description": "Returns a list of filtered entries from a project.",
                "operationId": "get_logs_v0_logs_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the project to get entries from.",
                            "title": "Project"
                        },
                        "description": "Name of the project to get entries from.",
                        "example": "eval-project"
                    },
                    {
                        "name": "filter_expr",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Boolean string to filter entries. TODO: Detailed page.",
                            "title": "Filter Expr"
                        },
                        "description": "Boolean string to filter entries. TODO: Detailed page.",
                        "example": "len(output) > 200 and temperature == 0.5"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer",
                                    "maximum": 200,
                                    "minimum": 1
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Limit"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Offset"
                        }
                    },
                    {
                        "name": "return_ids_only",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Return Ids Only"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "params": {},
                                    "logs": [
                                        {
                                            "id": "0",
                                            "ts": "2024-10-30 12:20:03",
                                            "entries": {
                                                "key1": "a",
                                                "key2": 1.0
                                            },
                                            "params": {}
                                        },
                                        {
                                            "id": "1",
                                            "ts": "2024-10-30 12:22:14",
                                            "entries": {
                                                "key1": "b",
                                                "key2": 2.0
                                            },
                                            "params": {}
                                        }
                                    ],
                                    "count": 2
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Project <project> not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/logs/fields": {
            "delete": {
                "tags": [
                    "Evals"
                ],
                "summary": "Delete Log Fields",
                "description": "Deletes a specific entry from multiple logs.",
                "operationId": "delete_log_fields_v0_logs_fields_delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "delete_empty_logs",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Whether to delete logs which end up being empty as a result of the field deletion.",
                            "default": false,
                            "title": "Delete Empty Logs"
                        },
                        "description": "Whether to delete logs which end up being empty as a result of the field deletion.",
                        "example": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteLogEntryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "info": "Log entry deleted successfully from all logs!"
                                }
                            }
                        }
                    },
                    "4041": {
                        "description": "Log Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "One or more logs with the specified IDs were not found."
                                }
                            }
                        }
                    },
                    "4042": {
                        "description": "Log Entry Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Log entry <entry> not found in one or more logs."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Evals"
                ],
                "summary": "Get Log Fields",
                "description": "Returns a mapping of fields and their datatypes from a project.",
                "operationId": "get_log_fields_v0_logs_fields_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the project to get fields for.",
                            "title": "Project"
                        },
                        "description": "Name of the project to get fields for.",
                        "example": "eval-project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "entries": {
                                        "col1": "string",
                                        "col2": "float"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Project <project> not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/log/{id}": {
            "get": {
                "tags": [
                    "Evals"
                ],
                "summary": "Get Log",
                "description": "Returns the log associated with a given id.",
                "operationId": "get_log_v0_log__id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the log to fetch.",
                            "title": "Id"
                        },
                        "description": "ID of the log to fetch.",
                        "example": "123"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "id": "123",
                                    "ts": "2024-10-30 12:20:03",
                                    "entries": {
                                        "input": "...",
                                        "output": "..."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Log Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Log with id <id> not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/logs/latest_timestamp": {
            "get": {
                "tags": [
                    "Evals"
                ],
                "summary": "Get Logs Latest Timestamp",
                "description": "Returns the update timestamp of the most recently updated log within the specified\npage and filter bounds.",
                "operationId": "get_logs_latest_timestamp_v0_logs_latest_timestamp_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the project to get entries from.",
                            "title": "Project"
                        },
                        "description": "Name of the project to get entries from.",
                        "example": "eval-project"
                    },
                    {
                        "name": "filter_expr",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Boolean string to filter entries. TODO: Detailed page.",
                            "title": "Filter Expr"
                        },
                        "description": "Boolean string to filter entries. TODO: Detailed page.",
                        "example": "len(output) > 200 and temperature == 0.5"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer",
                                    "maximum": 200,
                                    "minimum": 1
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Limit"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Offset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "params": {},
                                    "logs": [
                                        {
                                            "id": "0",
                                            "ts": "2024-10-30 12:20:03",
                                            "entries": {
                                                "key1": "a",
                                                "key2": 1.0
                                            },
                                            "params": {}
                                        },
                                        {
                                            "id": "1",
                                            "ts": "2024-10-30 12:22:14",
                                            "entries": {
                                                "key1": "b",
                                                "key2": 2.0
                                            },
                                            "params": {}
                                        }
                                    ],
                                    "count": 2
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Project <project> not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/logs/metric/{metric}/{key}": {
            "get": {
                "tags": [
                    "Evals"
                ],
                "summary": "Get Logs Metric",
                "description": "Returns the reduction metric for filtered values for a specific key from a project.",
                "operationId": "get_logs_metric_v0_logs_metric__metric___key__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "metric",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The name of the metric you would like to compute.",
                            "title": "Metric"
                        },
                        "description": "The name of the metric you would like to compute.",
                        "example": "mean"
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The key you would like to extract the reduction metric for.",
                            "title": "Key"
                        },
                        "description": "The key you would like to extract the reduction metric for.",
                        "example": "score"
                    },
                    {
                        "name": "project",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the project to get entries from.",
                            "title": "Project"
                        },
                        "description": "Name of the project to get entries from.",
                        "example": "eval-project"
                    },
                    {
                        "name": "filter_expr",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Boolean string to filter entries. TODO: Detailed page.",
                            "title": "Filter Expr"
                        },
                        "description": "Boolean string to filter entries. TODO: Detailed page.",
                        "example": "len(output) > 200 and temperature == 0.5"
                    },
                    {
                        "name": "log_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Log ids to include in the reduction operation. If none, then all logs are included in the search (before the filtering is applied).",
                            "title": "Log Ids"
                        },
                        "description": "Log ids to include in the reduction operation. If none, then all logs are included in the search (before the filtering is applied).",
                        "example": [
                            1,
                            2,
                            3
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "number"
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "boolean"
                                        }
                                    ],
                                    "title": "Response Get Logs Metric V0 Logs Metric  Metric   Key  Get"
                                },
                                "example": 4.56
                            }
                        }
                    },
                    "404": {
                        "description": "Project Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Project <project> not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/logs/groups": {
            "get": {
                "tags": [
                    "Evals"
                ],
                "summary": "Get Log Groups",
                "description": "Returns a dict with the different versions as keys and the values of the remaining\nitems within a given project based on its key.",
                "operationId": "get_log_groups_v0_logs_groups_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the project to get entries from.",
                            "title": "Project"
                        },
                        "description": "Name of the project to get entries from.",
                        "example": "eval-project"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the log entry to get distinct values from.",
                            "title": "Key"
                        },
                        "description": "Name of the log entry to get distinct values from.",
                        "example": "system_prompt"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Get Log Groups V0 Logs Groups Get"
                                },
                                "example": [
                                    {
                                        "version": "v0",
                                        "value": "First version of the system prompt"
                                    },
                                    {
                                        "version": "v1",
                                        "value": "Second version of the system prompt"
                                    }
                                ]
                            }
                        }
                    },
                    "404": {
                        "description": "Project Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Project <project> not found."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/router/train": {
            "post": {
                "tags": [
                    "Router Training"
                ],
                "summary": "Train Router",
                "description": "Train a router based on a specified training dataset and a set of endpoints to route\nacross. To *use* a custom-trained router, you will need to deploy the resulting\nartifacts to a live endpoint, via the `/router/deploy` `POST` endpoint.",
                "operationId": "train_router_v0_router_train_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the router.",
                            "title": "Name"
                        },
                        "description": "Name of the router.",
                        "example": "my_router"
                    },
                    {
                        "name": "dataset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Name of the uploaded dataset to train a router on. Must pass exactly one of `dataset`, `prompts`.",
                            "title": "Dataset"
                        },
                        "description": "Name of the uploaded dataset to train a router on. Must pass exactly one of `dataset`, `prompts`.",
                        "example": "dataset1"
                    },
                    {
                        "name": "prompts",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Specify the prompts to train a router on. Pass a string of comma separated integers. Must pass exactly one of `dataset`, `prompts`.",
                            "title": "Prompts"
                        },
                        "description": "Specify the prompts to train a router on. Pass a string of comma separated integers. Must pass exactly one of `dataset`, `prompts`.",
                        "example": "34,89,127"
                    },
                    {
                        "name": "endpoints",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "List of endpoints to include in the router. Endpoints must be specified using the `model@provider` format.",
                            "title": "Endpoints"
                        },
                        "description": "List of endpoints to include in the router. Endpoints must be specified using the `model@provider` format.",
                        "example": [
                            "gpt-4o-mini@openai",
                            "claude-3.5-sonnet@anthropic",
                            "llama-3.1-405b-chat@fireworks-ai"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Train Router V0 Router Train Post"
                                },
                                "example": {
                                    "info": "Router training started! You will receive an email soon!"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Router Training Already Exist",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "A router with this name has already been trained. Please, choose a different one."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Dataset Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "This dataset does not exist."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/router": {
            "delete": {
                "tags": [
                    "Router Training"
                ],
                "summary": "Delete Router",
                "description": "Deletes a specific trained router, as well as all the training files etc.",
                "operationId": "delete_router_v0_router_delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the router to delete.",
                            "title": "Name"
                        },
                        "description": "Name of the router to delete.",
                        "example": "my_router"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Delete Router V0 Router Delete"
                                },
                                "example": {
                                    "info": "Trained router deleted!"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Router Training Does Not Exist",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "You don't have a router with the name: my_router"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/router/rename": {
            "post": {
                "tags": [
                    "Router Training"
                ],
                "summary": "Rename Router",
                "description": "Renames the specified router from `name` to `new_name`.",
                "operationId": "rename_router_v0_router_rename_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The original name of the router.",
                            "title": "Name"
                        },
                        "description": "The original name of the router.",
                        "example": "original_name"
                    },
                    {
                        "name": "new_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The new name for the router.",
                            "title": "New Name"
                        },
                        "description": "The new name for the router.",
                        "example": "new_name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/router/list": {
            "get": {
                "tags": [
                    "Router Training"
                ],
                "summary": "List Routers",
                "description": "Lists all the trained routers and the relevant metadata.\nThese routers are training artifacts and therefore don't imply an active,\ndeployed router. To fetch a list of deployed routers, you can use the\n`/router/deploy/list` `GET` endpoint.",
                "operationId": "list_routers_v0_router_list_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Response List Routers V0 Router List Get"
                                },
                                "example": {
                                    "router_1": {
                                        "dataset": "dataset_1",
                                        "endpoints": [
                                            "model@provider",
                                            "..."
                                        ]
                                    },
                                    "...": [
                                        "..."
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v0/get_dataset_evaluation": {
            "get": {
                "tags": [
                    "Router Training"
                ],
                "summary": "Get Dataset Evaluation",
                "description": "Retrieve specific dataset evaluation object from the database.",
                "operationId": "get_dataset_evaluation_v0_get_dataset_evaluation_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "dataset_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Dataset Name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "title": "Response Get Dataset Evaluation V0 Get Dataset Evaluation Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/router/deploy": {
            "post": {
                "tags": [
                    "Router Deployment"
                ],
                "summary": "Deploy Router",
                "description": "Deploys a trained router to a live endpoint.\n\nTo use this router, replace the model in the endpoint string with the\nrouter name. E.g. you can use a router named `test_router` by calling the\n`router_test_router@q:1` endpoint.",
                "operationId": "deploy_router_v0_router_deploy_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the router to deploy.",
                            "title": "Name"
                        },
                        "description": "Name of the router to deploy.",
                        "example": "router1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Deploy Router V0 Router Deploy Post"
                                },
                                "example": {
                                    "info": "Router deployment started! You will receive an email soon!"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Router Training Does Not Exist",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "This router training doesn't exist. Please, choose a different one or trigger the training first."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Router Deployment"
                ],
                "summary": "Undeploy Router",
                "description": "Deactivates and deletes a previously deployed router, but keeps the training\nartifacts for this router, such that it can be redeployed if desired without needing\nto retrain.",
                "operationId": "undeploy_router_v0_router_deploy_delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the router to un-deploy.",
                            "title": "Name"
                        },
                        "description": "Name of the router to un-deploy.",
                        "example": "router1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Undeploy Router V0 Router Deploy Delete"
                                },
                                "example": {
                                    "info": "Router deletion started! You will receive an email soon!"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Router Not Deployed",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "This router is not deployed!"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/router/deploy/list": {
            "get": {
                "tags": [
                    "Router Deployment"
                ],
                "summary": "List Deployed Routers",
                "description": "Fetches a list of the *deployed* routers and relevant metadata (excluding the\ntrained but undeployed routers). To fetch a list of *all* trained routers (both\ndeployed and undeployed), you can use the `/router/list` `GET` endpoint.\n\nTo use any of these routers, replace the model in the endpoint string with the\nrouter name. E.g. you can use `router-abc` with the endpoint `router-abc@q:1`.",
                "operationId": "list_deployed_routers_v0_router_deploy_list_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {},
                                    "type": "array",
                                    "title": "Response List Deployed Routers V0 Router Deploy List Get"
                                },
                                "example": {
                                    "router_1": {
                                        "dataset": "dataset_1",
                                        "endpoints": [
                                            "model@provider",
                                            "..."
                                        ]
                                    },
                                    "...": [
                                        "..."
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v0/router/config": {
            "post": {
                "tags": [
                    "Router Configurations"
                ],
                "summary": "Create Router Config",
                "description": "Creates a router configuration, which can be queried later using only the\nconfiguration name, such as `my_router_config@routers`.",
                "operationId": "create_router_config_v0_router_config_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "config_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The name of the router configuration to create.",
                            "title": "Config Name"
                        },
                        "description": "The name of the router configuration to create.",
                        "example": "cost_and_speed_optimized"
                    },
                    {
                        "name": "router_endpoint",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The raw string which fully defines the router endpoint, with all constraints applied, including the router name and any extra arguments.",
                            "title": "Router Endpoint"
                        },
                        "description": "The raw string which fully defines the router endpoint, with all constraints applied, including the router name and any extra arguments.",
                        "example": "router1|models:llama-3.1-8b-chat,mixtral-8x22b-instruct-v0.1|providers:fireworks-ai,together-ai|q:1|c:4.65e-03|t:2.08e-05|i:2.07e-03@routers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Router Configurations"
                ],
                "summary": "Get Router Config",
                "description": "Returns the full router endpoint string for a given router configuration name.",
                "operationId": "get_router_config_v0_router_config_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "config_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The name of the router configuration to retrieve the full endpoint string for.",
                            "title": "Config Name"
                        },
                        "description": "The name of the router configuration to retrieve the full endpoint string for.",
                        "example": "cost_and_speed_optimized"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Get Router Config V0 Router Config Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Router Configurations"
                ],
                "summary": "Delete Router Config",
                "description": "Deletes the specified router configuration from your account.",
                "operationId": "delete_router_config_v0_router_config_delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "config_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The name of the router configuration to delete.",
                            "title": "Config Name"
                        },
                        "description": "The name of the router configuration to delete.",
                        "example": "cost_and_speed_optimized"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/router/config/rename": {
            "post": {
                "tags": [
                    "Router Configurations"
                ],
                "summary": "Rename Router Config",
                "description": "Renames the specified router configuration in your account.",
                "operationId": "rename_router_config_v0_router_config_rename_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The original name of the router configuration.",
                            "title": "Name"
                        },
                        "description": "The original name of the router configuration.",
                        "example": "original_name"
                    },
                    {
                        "name": "new_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The new name for the router configuration.",
                            "title": "New Name"
                        },
                        "description": "The new name for the router configuration.",
                        "example": "new_name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/router/config/list": {
            "get": {
                "tags": [
                    "Router Configurations"
                ],
                "summary": "List Router Configs",
                "description": "Lists all saved router configurations by name.",
                "operationId": "list_router_configs_v0_router_config_list_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Response List Router Configs V0 Router Config List Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v0/credits": {
            "get": {
                "tags": [
                    "Credits"
                ],
                "summary": "Get Credits",
                "description": "Returns the number of available credits.",
                "operationId": "get_credits_v0_credits_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditsResponse"
                                },
                                "example": {
                                    "id": "<USER_ID>",
                                    "credits": 10
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v0/promo": {
            "post": {
                "tags": [
                    "Credits"
                ],
                "summary": "Promo Code",
                "description": "Activates a promotional code.",
                "operationId": "promo_code_v0_promo_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Promo code to be activated.",
                            "title": "Code"
                        },
                        "description": "Promo code to be activated.",
                        "example": "sample_code"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "ID of the user that receives the credits,defaults to the user making the request.",
                            "title": "User"
                        },
                        "description": "ID of the user that receives the credits,defaults to the user making the request.",
                        "example": "sample_user_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Promo Code V0 Promo Post"
                                },
                                "example": {
                                    "info": "Code {code} activated successfully!"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Already activated code",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "This code has already been activated."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Code Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Invalid code."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ArtifactConfig": {
                "properties": {
                    "artifacts": {
                        "type": "object",
                        "title": "Artifacts",
                        "description": "Dictionary containing one or more key:value pairs that will be stored as artifacts within a project.",
                        "example": {
                            "dataset": "high-jump-data",
                            "world-record": 2.45
                        }
                    }
                },
                "type": "object",
                "required": [
                    "artifacts"
                ],
                "title": "ArtifactConfig"
            },
            "Body_log_query_v0_queries_post": {
                "properties": {
                    "endpoint": {
                        "type": "string",
                        "title": "Endpoint",
                        "description": "Endpoint to log query for.",
                        "example": "llama-3.1-8b-chat_ollama@external"
                    },
                    "query_body": {
                        "type": "object",
                        "title": "Query Body",
                        "description": "A JSON object containing the body of the request",
                        "example": {
                            "max_tokens": 100,
                            "messages": [
                                {
                                    "content": "You are an useful assistant",
                                    "role": "system"
                                },
                                {
                                    "content": "Explain who Newton was.",
                                    "role": "user"
                                }
                            ],
                            "model": "llama-3.1-8b-chat_ollama@external",
                            "temperature": 0.5
                        }
                    },
                    "response_body": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Response Body",
                        "description": "An optional JSON object containing the response to the request",
                        "example": {
                            "choices": [
                                {
                                    "finish_reason": "stop",
                                    "index": 0,
                                    "message": {
                                        "content": "Sir Isaac Newton was an English mathematician, physicist, and astronomer who lived from 1643 to 1727.\\n\\nHe is widely recognized as one of the most influential scientists in history, and his work laid the foundation for the Scientific Revolution of the 17th century.\\n\\nNewton's most famous achievement is his theory of universal gravitation, which he presented in his groundbreaking book \"Philosophi\\u00e6 Naturalis Principia Mathematica\" in 1687.\\n\\nAccording to Newton's theory, every",
                                        "role": "assistant"
                                    }
                                }
                            ],
                            "created": 1725396241,
                            "id": "chatcmpl-92d3b36e-7b64-4ae8-8102-9b7e3f5dd30f",
                            "model": "meta.llama3-8b-instruct-v1:0",
                            "object": "chat.completion",
                            "usage": {
                                "completion_tokens": 100,
                                "prompt_tokens": 44,
                                "total_tokens": 144
                            }
                        }
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "Tags for later filtering."
                    },
                    "timestamp": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Timestamp",
                        "description": "A timestamp (if not set, will be the time of sending)",
                        "example": "2024-07-12T04:20:32.808410"
                    }
                },
                "type": "object",
                "required": [
                    "endpoint",
                    "query_body"
                ],
                "title": "Body_log_query_v0_queries_post"
            },
            "ChatCompletionRequest": {
                "properties": {
                    "messages": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Messages",
                        "description": "A list of messages comprising the conversation so far.",
                        "example": [
                            {
                                "content": "Tell me a joke",
                                "role": "user"
                            }
                        ]
                    },
                    "model": {
                        "type": "string",
                        "title": "Model",
                        "description": "The endpoint to use, in the format `{model}@{provider}`, based on any of the supported endpoints as per the list returned by `/v0/endpoints`",
                        "example": "gpt-4o-mini@openai"
                    },
                    "max_tokens": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Tokens",
                        "description": "The maximum number of tokens that can be generated in the chat completion.\n\nThe total length of input tokens and generated tokens is limited by the model's context length.",
                        "example": 1024
                    },
                    "stop": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stop",
                        "description": "Up to 4 sequences where the API will stop generating further tokens.",
                        "example": [
                            "The End.",
                            " is the answer."
                        ]
                    },
                    "stream": {
                        "type": "boolean",
                        "title": "Stream",
                        "description": "If set, partial message deltas will be sent. Tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a `data: [DONE]` message.",
                        "default": false,
                        "example": false
                    },
                    "temperature": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature",
                        "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\n\nGenerally recommended to alter this or `top_p`, but not both.",
                        "default": 1.0,
                        "example": 0.9
                    },
                    "frequency_penalty": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Frequency Penalty",
                        "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
                        "example": 1.5
                    },
                    "logit_bias": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "number"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logit Bias",
                        "description": "Modify the likelihood of specified tokens appearing in the completion.\n\nAccepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.",
                        "example": {
                            "0": 10,
                            "1": -75,
                            "2": 90
                        }
                    },
                    "logprobs": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logprobs",
                        "description": "Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the `content` of `message`.",
                        "example": false
                    },
                    "top_logprobs": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Top Logprobs",
                        "description": "An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability. `logprobs` must be set to `true` if this parameter is used.",
                        "example": 15
                    },
                    "n": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "N",
                        "description": "How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep `n` as `1` to minimize costs.",
                        "example": 15
                    },
                    "presence_penalty": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Presence Penalty",
                        "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.",
                        "example": -1.1
                    },
                    "response_format": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Response Format",
                        "description": "An object specifying the format that the model must output.\n\nSetting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema.\n\nSetting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the message the model generates is valid JSON.\n\n**Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly \"stuck\" request. Also note that the message content may be partially cut off if `finish_reason=\"length\"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length.",
                        "example": "{ \"type\": \"json_mode\"}"
                    },
                    "seed": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Seed",
                        "description": "If specified, the system will make a best effort to sample deterministically, such that repeated requests with the same `seed` and parameters should return the same result. Determinism is not guaranteed, and you should refer to the `system_fingerprint` response parameter to monitor changes in the backend.",
                        "example": 11
                    },
                    "stream_options": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "boolean"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stream Options",
                        "description": "Options for streaming response. Only set this when you set `stream: true`.",
                        "example": [
                            "include_usage",
                            true
                        ]
                    },
                    "top_p": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Top P",
                        "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\n\nGenerally recommended to alter this or `temperature` but not both.",
                        "example": 0.5
                    },
                    "tools": {
                        "anyOf": [
                            {
                                "items": {},
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tools",
                        "description": "A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported."
                    },
                    "tool_choice": {
                        "anyOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tool Choice",
                        "description": "Controls which (if any) tool is called by the model. `none` means the model will not call any tool and instead generates a message.`auto` means the model can pick between generating a message or calling one or more tools. `required` means the model must call one or more tools. Specifying a particular tool via `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to call that tool.\n\n`none` is the default when no tools are present. `auto` is the default if tools are present.",
                        "example": "{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}"
                    },
                    "parallel_tool_calls": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parallel Tool Calls",
                        "description": "Whether to enable parallel function calling during tool use.",
                        "default": true,
                        "example": true
                    },
                    "user": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User",
                        "description": "A unique identifier representing your end-user.",
                        "example": "some_user"
                    },
                    "signature": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Signature",
                        "description": "A string used to represent where the request came from, for examples, did it come via the Python package, the NodeJS package, the chat interface etc. This should *not* be set by the user.",
                        "example": "python"
                    },
                    "use_custom_keys": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Use Custom Keys",
                        "description": "Whether or not to use custom API keys with the specified provider, meaning that you will be using your own account with that provider in the backend.",
                        "example": true
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "Comma-separated list of tags to associate with the corresponding prompt.",
                        "example": [
                            "user123",
                            "CompanyABC"
                        ]
                    },
                    "drop_params": {
                        "type": "boolean",
                        "title": "Drop Params",
                        "description": "Whether or not to drop unsupported OpenAI params by the provider you're using",
                        "default": true,
                        "example": true
                    },
                    "region": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Region",
                        "description": "A string used to represent the region where the endpoint is accessed. This is only relevant for certain providers like `vertex-ai` and `aws-bedrock`, where the endpoint is being accessed through a specified region."
                    },
                    "log_query_body": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Log Query Body",
                        "description": "Whether to log the contents of the query json body.",
                        "default": true
                    },
                    "log_response_body": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Log Response Body",
                        "description": "Whether to log the contents of the response json body.",
                        "default": true
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "required": [
                    "messages",
                    "model"
                ],
                "title": "ChatCompletionRequest",
                "description": "Request model for chat completion based language model.\n\nAttributes:\n    model (str): The model identifier.\n    messages (List[Dict[str]]): List of messages for completion.\n    temperature (float): The temperature parameter for generating completions.\n    stream (bool): Whether to stream the response."
            },
            "ChatCompletionResponse": {
                "properties": {
                    "model": {
                        "type": "string",
                        "title": "Model"
                    },
                    "created": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created"
                    },
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id"
                    },
                    "object": {
                        "type": "string",
                        "title": "Object",
                        "default": "chat.completion"
                    },
                    "usage": {
                        "type": "object",
                        "title": "Usage"
                    },
                    "choices": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Choices"
                    }
                },
                "type": "object",
                "required": [
                    "model",
                    "usage",
                    "choices"
                ],
                "title": "ChatCompletionResponse",
                "description": "Response model for chat completion based language model.\n\nAttributes:\n    model (str): The model identifier.\n    created (int): Timestamp indicating when the response was created.\n    id (str): Identifier for the completion response.\n    object (str): The type of object, defaults to \"chat.completion\".\n    usage (dict): Usage statistics or additional information.\n    choices (List[Dict]): List of completion choices."
            },
            "CreateLogConfig": {
                "properties": {
                    "project": {
                        "type": "string",
                        "title": "Project",
                        "description": "Name of the project the stored entries will be associated to.",
                        "example": "eval-project"
                    },
                    "params": {
                        "type": "object",
                        "title": "Params",
                        "description": "Dictionary containing one or more key:value pairs that will be logged into the platform. Parameters will be automatically versioned based on their values. Values must be JSON serializable. If a `explicit_types` dictionary is present, its values will override the inferred types of the entries.",
                        "default": {},
                        "example": {
                            "explicit_types": {
                                "system-prompt": "str"
                            },
                            "function_definition": "...",
                            "system-prompt": "..."
                        }
                    },
                    "entries": {
                        "type": "object",
                        "title": "Entries",
                        "description": "Dictionary containing one or more key:value pairs that will be logged into the platform. Values must be JSON serializable. If a `explicit_types` dictionary is present, its values will override the inferred types of the entries.",
                        "default": {},
                        "example": {
                            "explicit_types": {
                                "input": "Image"
                            },
                            "input": "...",
                            "score-test-1": "..."
                        }
                    }
                },
                "type": "object",
                "required": [
                    "project"
                ],
                "title": "CreateLogConfig"
            },
            "CreditsResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "credits": {
                        "type": "number",
                        "title": "Credits"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "credits"
                ],
                "title": "CreditsResponse",
                "description": "Response model for credits models.\n\nAttributes:\n    id (str): The id of the users.\n    credits (float): The credits of the users."
            },
            "CustomApiKeyModelResponse": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "value"
                ],
                "title": "CustomApiKeyModelResponse"
            },
            "CustomEndpointModelResponse": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "model_arg": {
                        "type": "string",
                        "title": "Model Arg"
                    },
                    "url": {
                        "type": "string",
                        "title": "Url"
                    },
                    "key": {
                        "type": "string",
                        "title": "Key"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "model_arg",
                    "url",
                    "key"
                ],
                "title": "CustomEndpointModelResponse"
            },
            "DatasetArtifactConfig": {
                "properties": {
                    "artifacts": {
                        "type": "object",
                        "title": "Artifacts",
                        "description": "Dictionary containing one or more key:value pairs that will be stored as artifacts within a dataset.",
                        "example": {
                            "processed": false,
                            "traffic": "production"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "artifacts"
                ],
                "title": "DatasetArtifactConfig"
            },
            "DatasetInfo": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "A unique, user-defined name identify a new dataset.",
                        "example": "new-dataset"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "DatasetInfo"
            },
            "DatasetNewName": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "New name of the dataset.",
                        "example": "renamed-dataset"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "DatasetNewName"
            },
            "DeleteLogEntryRequest": {
                "properties": {
                    "fields": {
                        "items": {
                            "prefixItems": [
                                {
                                    "anyOf": [
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "items": {
                                                "type": "integer"
                                            },
                                            "type": "array"
                                        }
                                    ]
                                },
                                {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    ]
                                }
                            ],
                            "type": "array",
                            "maxItems": 2,
                            "minItems": 2
                        },
                        "type": "array",
                        "minItems": 1,
                        "title": "Fields",
                        "description": "List of lists of log ID(s) and field(s) to delete, either as an individual item or a list of items.",
                        "example": [
                            [
                                123,
                                "score"
                            ],
                            [
                                [
                                    456,
                                    457
                                ],
                                [
                                    "score",
                                    "response"
                                ]
                            ],
                            [
                                [
                                    458,
                                    459,
                                    460
                                ],
                                "response"
                            ]
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "fields"
                ],
                "title": "DeleteLogEntryRequest"
            },
            "DeleteLogsRequest": {
                "properties": {
                    "ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "minItems": 1,
                        "title": "Ids",
                        "description": "List of log IDs to delete.",
                        "example": [
                            123,
                            456,
                            789
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "ids"
                ],
                "title": "DeleteLogsRequest"
            },
            "EntriesConfig": {
                "properties": {
                    "entries": {
                        "items": {},
                        "type": "array",
                        "title": "Entries",
                        "description": "List of entries to add",
                        "example": [
                            "id_1",
                            "id_2",
                            "id_3"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "entries"
                ],
                "title": "EntriesConfig"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "ProjectConfig": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "A unique, user-defined name used when referencing  the project.",
                        "example": "eval-project"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "ProjectConfig"
            },
            "UpdateLogRequest": {
                "properties": {
                    "ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "minItems": 1,
                        "title": "Ids",
                        "description": "List of log IDs to update with new or overriding entries.",
                        "example": [
                            123,
                            456,
                            789
                        ]
                    },
                    "params": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "items": {
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "Params",
                        "description": "Dictionary or list of dictionaries of key-value parameter pairs to add or update in the logs.",
                        "default": {},
                        "example": {
                            "explicit_types": {
                                "system-prompt": "str"
                            },
                            "function_definition": "...",
                            "system-prompt": "..."
                        }
                    },
                    "entries": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "items": {
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "Entries",
                        "description": "Dictionary or list of dictionaries of key-value entry pairs to add or update in the logs.",
                        "default": {},
                        "example": {
                            "explicit_types": {
                                "input": "Image"
                            },
                            "input": "...",
                            "score-test-1": "..."
                        }
                    },
                    "overwrite": {
                        "type": "boolean",
                        "title": "Overwrite",
                        "description": "Whether to overwrite existing logs",
                        "default": false,
                        "example": false
                    }
                },
                "type": "object",
                "required": [
                    "ids"
                ],
                "title": "UpdateLogRequest"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        },
        "securitySchemes": {
            "HTTPBearer": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}